# ******************************************************************************
# ******************************************************************************
#
#		Name : 		combuffer.py
#		Purpose : 	Test buffer compiler
#		Author : 	Paul Robson (paul@robsons.org.uk)
#		Created : 	1st October 2019
#
# ******************************************************************************
# ******************************************************************************

#COL_COMMENT = $00 							; White (comment)
#COL_DEFINE = $40 							; Red (defining word)
#COL_COMPILE = $80 							; Green (compiling word)
#COL_EXEC = $C0 							; Yellow (executing word)

src = """ 
[13] [16] [1-] [517]
"""

src = src.upper().replace("\t"," ").replace("\n"," ") 					# preprocess
src = [x for x in src.split() if src != ""]								# split up, no blanks

cfBuffer = [ ]  														# empty buffer.

for s in src:
	decorator = 0x80													# green compiles by default
	if s.startswith(":"):												# definition (Red)
		decorator = 0x40
		s = s[1:]
	elif s.startswith("[") and s.endswith("]"):							# execution (yellow)
		decorator = 0xC0
		s = s[1:-1]
	for c in s: 														# add the word.
		cfBuffer.append((ord(c) & 0x3F) | decorator)
	cfBuffer.append(0x20)												# add terminating space
cfBuffer.append(0x00)													# add terminator.

print("; **** Generated by combuffer.py ****")
print("TestBuffer:")
print("\n".join(["\t .byte ${0:02x}".format(x) for x in cfBuffer]))
